apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: argo-workflows
  annotations:
    description: Template to deploy an Argo Workflows cluster on OCP.
    tags: argo, workflows,gitops,operator
    iconClass: icon-git
    openshift.io/provider-display-name: Red Hat, Inc.
    openshift.io/support-url: https://access.redhat.com
objects:

  - apiVersion: project.openshift.io/v1
    kind: Project
    metadata:
      name: ${ARGO_WORKFLOWS_NAMESPACE}
      annotations:
        openshift.io/description: "This project contains all the resources related to Argo Workflows"
        openshift.io/display-name: "Argo Workflows"
      labels:
        openshift.io/cluster-monitoring: "false"
        openshift.io/user-monitoring: "true"

  - apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: ${ARGO_WORKFLOWS_NAME}
      namespace: ${ARGOCD_NAMESPACE}
    spec:
      destination:
        server: 'https://kubernetes.default.svc'
        namespace: ${ARGO_WORKFLOWS_NAMESPACE}
      sources:
        - repoURL: 'https://argoproj.github.io/argo-helm'
          targetRevision: 0.40.3
          chart: argo-workflows
          helm:
            valueFiles:
              - $values/20-argo-workflows/values.yaml
        - repoURL: 'https://github.com/alvarolop/spring-batch-capitalator.git'
          targetRevision: main
          ref: values
      project: default
      syncPolicy:
        automated:
          prune: false
          selfHeal: false
        syncOptions:
          - CreateNamespace=true
          # - ServerSideApply=true

  - kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      name: ${ARGO_WORKFLOWS_NAME}
      namespace: ${ARGO_WORKFLOWS_NAMESPACE}
    spec:
      to:
        kind: Service
        name: ${ARGO_WORKFLOWS_NAME}-${ARGO_WORKFLOWS_NAMESPACE}-server
        weight: 100
      port:
        targetPort: 2746
      tls:
        termination: edge
      wildcardPolicy: None
  

  - kind: Secret
    apiVersion: v1
    metadata:
      name: argo-workflows-sso
      namespace: ${ARGO_WORKFLOWS_NAMESPACE}
    type: Opaque
    stringData:
      client-id: "${ARGO_CD_CLIENT_ID}"
      client-secret: "${ARGO_CD_CLIENT_SECRET}"


  - apiVersion: argoproj.io/v1beta1
    kind: ArgoCD
    metadata:
      name: ${ARGOCD_CLUSTER_NAME}
      namespace: ${ARGO_WORKFLOWS_NAMESPACE}
    spec:
      server:
        autoscale:
          enabled: false
        grpc:
          ingress:
            enabled: false
        ingress:
          enabled: false
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 125m
            memory: 128Mi
        route:
          enabled: true
        service:
          type: ''
      grafana:
        enabled: false
        ingress:
          enabled: false
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 250m
            memory: 128Mi
        route:
          enabled: false
      monitoring:
        enabled: false
      notifications:
        enabled: false
      prometheus:
        enabled: false
        ingress:
          enabled: false
        route:
          enabled: false
      initialSSHKnownHosts: {}
      sso:
        provider: dex
        dex:
          openShiftOAuth: true
          config: |
            connectors:
            - config:
                clientID: system:serviceaccount:argo-workflows:argocd-argocd-dex-server
                clientSecret: $oidc.dex.clientSecret
                groups: []
                insecureCA: true
                issuer: https://kubernetes.default.svc
                redirectURI: https://argocd-server-argo-workflows.apps.ocp.sandbox2972.opentlc.com/api/dex/callback
              id: openshift
              name: OpenShift
              type: openshift
            staticClients:
            - idEnv: ARGO_WORKFLOWS_SSO_CLIENT_ID
              name: "Argo Workflow"
              redirectURIs:
                - https://cluster-argo-workflows.apps.ocp.sandbox2972.opentlc.com/oauth2/callback
              secretEnv: ARGO_WORKFLOWS_SSO_CLIENT_SECRET
          env:
            - name: ARGO_WORKFLOWS_SSO_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: argo-workflows-sso
                  key: client-secret
            - name: ARGO_WORKFLOWS_SSO_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: argo-workflows-sso
                  key: client-id
      applicationSet:
        resources:
          limits:
            cpu: '2'
            memory: 1Gi
          requests:
            cpu: 250m
            memory: 512Mi
        webhookServer:
          ingress:
            enabled: false
          route:
            enabled: false
      rbac:
        defaultPolicy: ''
        policy: |
          g, system:cluster-admins, role:admin
          g, cluster-admins, role:admin
        scopes: '[groups]'
      disableAdmin: true
      # usersAnonymousEnabled: true
      repo:
        resources:
          limits:
            cpu: '1'
            memory: 1Gi
          requests:
            cpu: 250m
            memory: 256Mi
      resourceExclusions: |
        - apiGroups:
          - tekton.dev
          clusters:
          - '*'
          kinds:
          - TaskRun
          - PipelineRun
      ha:
        enabled: false
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 250m
            memory: 128Mi
      tls:
        ca: {}
      redis:
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 250m
            memory: 128Mi
      controller:
        processors: {}
        resources:
          limits:
            cpu: '2'
            memory: 2Gi
          requests:
            cpu: 250m
            memory: 1Gi
        sharding: {}

parameters:
- name: ARGO_WORKFLOWS_NAMESPACE
  description: "The project where the cluster will be installed."
  required: false
  value: "argo-workflows"
- name: ARGO_WORKFLOWS_NAME
  description: "The name of the Argo Workflows cluster."
  required: false
  value: "cluster"
- name: ARGOCD_NAMESPACE
  description: "The project where the cluster will be installed."
  required: false
  value: "gitops"
- name: ARGOCD_CLUSTER_NAME
  description: "The name of the ArgoCD cluster."
  required: false
  value: "argocd"
- name: ARGO_CD_CLIENT_ID
  description: "The name of the Argo Workflows cluster."
  required: false
  value: "argo-workflows-sso"
- name: ARGO_CD_CLIENT_SECRET
  description: "The name of the Argo Workflows cluster."
  required: false
  value: "MY-SECRET-STRING-CAN-BE-UUID"
